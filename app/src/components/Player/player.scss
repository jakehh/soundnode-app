@import "../../sass/_variables";

.player {
  &_inner {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    background: $sectionBackground;
    border-top: 1px solid $separatorDarkColor;
    display: flex;
    flex-direction: row;
    z-index: 1;
    padding-top: 5px;
  }

  &_thumb {
    height: 50px;
    width: 50px;
    margin: 5px 0;
    float: left;
    cursor: pointer;
  }

  &_title {
    font-size: 14px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    padding: 5px 10px 0;
    cursor: pointer;
  }

  &_details {
    width: 300px;
    flex: 1;
    padding: 0 5px;
  }

  &_user {
    display: inline-block;
    color: #FFF;
    font-size: 11px;
    padding: 0 10px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-weight: 300;
    cursor: pointer;
  }

  &_currentSong {
    display: none;
    margin: 10px 0 0;
  }

  &_controls {
    padding: 0 10px;
    overflow: hidden;
    width: 200px;
    display: flex;
    align-items: center;

    & .fa {
      font-size: 20px;
      color: #FFF;
      &.thin::before {
        -webkit-text-stroke: 1px #000;
      }
    }

    & span {
      display: block;
      overflow: hidden;
      text-align: center;
      flex-grow: 1;
    }
  }

  &_volume {
    margin: 20px 30px 0;
    position: relative;

    & .fa {
      font-size: 20px;
    }

    & .player_volume_range {
      width: 100px;
      display: inline-block;
      position: absolute;
      -webkit-transform: rotate(-90deg);
      left: -40px;
      margin-top: -90px;
      padding: 10px;
      background: $sectionBackground;
      border-radius: 5px;

      &::-webkit-slider-thumb {
        -webkit-appearance: none;
        height: 11px;
        width: 11px;
        border-radius: 6px;
        background: $scColor;
        cursor: pointer;
        margin-top: -4px;
      }

      &::-webkit-slider-runnable-track {
        width: 100%;
        height: 3px;
        cursor: pointer;
        background: $scColor;
        border-radius: 2.5px;
      }

      &:focus::-webkit-slider-runnable-track {
        background: $scColor;
      }

      &[data-isVisible="false"] {
        display: none;
      }

      &[data-isVisible="true"] {
        display: inline-block;
      }
    }

  }

  &_time {
    display: inline-block;
    font-size: 11px;
    vertical-align: top;
    color: #ccc;
  }

  &_timeLeft {
    margin-left: 25px;
  }

  &_timeCurrent {
    &:not(:empty) {
      &::after {
        content: '/';
        margin: 0 3px;
      }
    }
  }

  &_favorite {
    margin: 0 0 0 10px;

    .fa {
      color: #949599;
      font-size: 12px;
    }

    &.active {
      .fa {
        color: #f50;
      }
    }
  }

  &_progress {

    position: relative;
    top: -20px;
    height: 4px;
    padding: 20px 0 10px;
    overflow: hidden;
    cursor: pointer;
    box-sizing: content-box;

    &:hover {
      & .player_progress_bar::before {
        background: rgba(255, 255, 255, 0.2);
      }

      & .player_progress_bar::after {
        transform: scale(1);
      }
    }

    &_bar {
      display: block;
      width: 0;
      height: 4px;
      background: $scColor;

      &::before {
        content: '';
        position: absolute;
        display: block;
        height: 4px;
        width: 100%;
        background: rgba(0, 0, 0, 0.15);
        z-index: -1;
        transition: $transitionInstantValue;
      }

      &::after {
        content: '';
        position: relative;
        top: -4px;
        left: 6px;
        display: block;
        float: right;
        height: 12px;
        width: 12px;
        background: rgb(255, 122, 0);
        border-radius: 50%;
        box-shadow: 0 0 2px 0 #000;
        transform: scale(0);
        transition: $transitionInstantValue;
      }
    }

    &_wrapper {
      position: absolute;
      // 1px horizontal protection area for window mouseleave workaround
      padding: 0 1px;
      top: 0;
      left: 0;
      width: 100%;
    }

    &.mousetrap {
      // reset scrub if mouse leaves this area
      $topThreshold: 100px;
      $bottomThreshold: 50px;

      top: -$topThreshold;
      padding-top: $topThreshold;
      padding-bottom: $bottomThreshold;
    }
  }

  &_lock, &_repeat, &_shuffle, &_queueList {
    & .fa {
      font-size: 14px;
    }

    &.active,
    &.active .fa {
      color: $scColor;
    }
  }
}

// State for component
.songPlaying {
  .player_controls .player_play-pause {
    .fa {
      &-play {
        display: none;
      }

      &-pause {
        display: block;
      }
    }
  }
}